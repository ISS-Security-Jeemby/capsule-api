# API testing workflow config for CI/CD on Github

name: API continuous integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '**'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  quality_check:
    strategy:
      # don't cancel other jobs if one fails
      fail-fast: false
      matrix:
        os: [ubuntu]
    runs-on: ${{ matrix.os }}-latest  # Runs on latest builds of matrix OSes

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
    
      # Builds on a predefined action that has Ruby installed 
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Setup test database
        env: # define secrets in Github project -> settings -> secrets
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            DB_KEY: ${{ secrets.DB_KEY }}
        run: RACK_ENV=test bundle exec rake db:migrate

      - name: Run all specs
        env: # define secrets in Github project -> settings -> secrets
            DATABASE_URL: ${{ secrets.DATABASE_URL }}
            DB_KEY: ${{ secrets.DB_KEY }}
        run: bundle exec rake spec
